pipeline {
    agent any
    
    stages {
        stage("Checkout") {
            steps {
                git branch: "main", url: "https://github.com/adamKHTML/Atlas"
            }
        }
        
        stage("Continuous Integration") {
            steps {
                dir('front') {
                    sh "npm install"
                    sh "npm install lucide-react country-list dompurify @tailwindcss/vite tailwindcss terser vitest @testing-library/react @testing-library/jest-dom"
                    sh "npm run build"
                    sh "npm run test"
            }
        }
        
        stage("Continuous Delivery") {
            steps {
                dir('front') {
                    sh "docker build -t ${DOCKERHUB_USERNAME}/atlasreact-deployment ."
                    sh "echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin"
                    sh "docker push ${DOCKERHUB_USERNAME}/atlasreact-deployment"
                }
            }
        }
        
        stage("Deploy Frontend") {
            steps {
                sh '''
                    echo "D√©but du d√©ploiement Atlas Frontend..."
                    
                    # Red√©marrage du container frontend avec la nouvelle image
                    echo " Red√©marrage du container frontend..."
                    docker stop atlas_react_frontend_container || true
                    docker rm atlas_react_frontend_container || true
                    docker-compose up -d frontend
                    
                    # Attente d√©marrage
                    echo " Attente d√©marrage frontend..."
                    sleep 15
                    
                    # Installation compl√®te des d√©pendances
                    echo " Installation des d√©pendances frontend..."
                    docker exec atlas_react_frontend_container npm install --production
                    docker exec atlas_react_frontend_container npm install lucide-react country-list dompurify @tailwindcss/vite tailwindcss terser vitest @testing-library/react @testing-library/jest-dom
                    
                    # Configuration Tailwind et Vite
                    echo "Configuration Tailwind et Vite..."
                    docker exec atlas_react_frontend_container ls -la vite.config.js || echo "Vite config OK"
                    docker exec atlas_react_frontend_container ls -la tailwind.config.js || echo "Tailwind config OK"
                    
                    # Build en production dans le container
                    echo " Build de production avec Tailwind..."
                    docker exec atlas_react_frontend_container npm run build || echo "Build d√©j√† fait"
                    
                    echo " Frontend Atlas d√©ploy√© avec succ√®s sur http://180.149.199.211:3002"
                '''
            }
        }
        
        stage("Verify Deployment") {
            steps {
                sh '''
                    echo "üîç V√©rification des services..."
                    sleep 10
                    
                    # Test backend
                    curl -f http://180.149.199.211:8092/api/countries || echo "‚ö†Ô∏è Backend pas encore pr√™t"
                    
                    # Test frontend
                    curl -f http://180.149.199.211:3002/ || echo " Frontend pas encore pr√™t"
                    
                    echo "D√©ploiement frontend termin√© avec Tailwind et Vitest !"
                '''
            }
        }
    }
    
    post {
        success {
            echo "üéâ D√©ploiement frontend r√©ussi avec toutes les d√©pendances !"
        }
        failure {
            echo "‚ùå √âchec du d√©ploiement frontend"
        }
    }
}